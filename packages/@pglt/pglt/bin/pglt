#!/usr/bin/env node
const { platform, arch, env } = process;

/**
 * platform and arch are values injected into the node runtime.
 * We use the values documented on https://nodejs.org.
 */
const PLATFORMS = {
  win32: {
    x64: "pglt-x86_64-windows-msvc/pglt.exe",
    arm64: "pglt-aarch64-windows-msvc/pglt.exe",
  },
  darwin: {
    x64: "pglt-x86_64-apple-darwin/pglt",
    arm64: "pglt-aarch64-apple-darwin/pglt",
  },
  linux: {
    x64: "pglt-x86_64-linux-gnu/pglt",
    arm64: "pglt-aarch64-linux-gnu/pglt",
  },
};

const binPath = env.PGLT_BINARY || PLATFORMS?.[platform]?.[arch];

if (binPath) {
  const result = require("child_process").spawnSync(
    require.resolve(binPath),
    process.argv.slice(2),
    {
      shell: false,
      stdio: "inherit",
      env,
    }
  );

  if (result.error) {
    throw result.error;
  }

  process.exitCode = result.status;
} else {
  console.error(
    "The pglt CLI package doesn't ship with prebuilt binaries for your platform yet. Please file an issue in the main repository."
  );
  process.exitCode = 1;
}
